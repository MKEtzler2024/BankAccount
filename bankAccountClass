import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.NoSuchElementException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;

public class BankAccount {

    private double balance;
    private double initBal;
    private String userName;
    private ArrayList<Transaction> transactions = new ArrayList<>();
    private int accountNum;
    public Scanner userScanner = new Scanner(System.in);

    public BankAccount(){
        this.accountNum=0;
        this.balance=0.0;
        this.userName="NoName";
        System.out.println("Enter user name: ");
        this.userName = userScanner.next();
        System.out.println("Enter inital balance: ");
        this.initBal = userScanner.nextDouble();
        this.balance = initBal;
        this.accountNum = genAccountNum();

    }
    public BankAccount(String userName, double initBalance, int accountNum){
        this.balance = initBalance;
        this.initBal=initBalance;
        this.userName = userName;
        this.accountNum =accountNum;

    }
    public static int genAccountNum() {
        double num1 = Math.random() * 100;
        double num2 = Math.random() * 100;
        double num3 = num1 * num2 * 10;
        int num4 = (int) num3;
        System.out.println(num4);
        return num4;

    }
    public void setInitBal(double init){
        this.initBal = init;

    }
    public double getInitBal(){
        return initBal;
    }

    public int getAccountNum(){
        return accountNum;

    }
    public ArrayList<Transaction> getTransList(){
        return transactions;

    }
    public String getUserName(){
        return this.userName;

    }
    public void setUserName(String user){
        this.userName=user;

    }
    public double getBalance(){
        return this.balance;

    }
    public void setBalance(double bal){
        this.balance =bal;

    }
    public void withdraw(double amount){
        this.balance -= amount;
        if (negBal()) {
            this.balance += amount;
            System.out.println("Current balance: " + getBalance());
        }
        transactions.add(new Transaction(-amount, "Withdrawal", balance));

    }
    public void deposit(double amount){
        this.balance += amount;
        transactions.add(new Transaction(amount, "Deposit", balance));
    }
    public boolean negBal(){
        if(this.balance<0){
            System.out.println("Sorry balance too low. OverDraft fee applied -$5, please add funds");
            this.balance -= 5;
            return true;
        }
        else{
            return false;

        }


    }
    public void getTransactions(){
        if(transactions.isEmpty()){
            System.out.println("No Transactions");
        }
        else {
            System.out.println("Oldest-Newest");
            for (int i = 0; i < transactions.size(); i++) {
                System.out.print(transactions.get(i) + ", $");
            }
            System.out.println();
        }
    }
    public void print() {
        System.out.printf("Welcome back: %s%nCurrent Balance: %.2f%nRecent Transactions: %n", this.userName, this.balance);
        for (Transaction transaction : transactions) {
            System.out.printf("Amount: %.2f, Type: %s, Balance After Transaction: %.2f%n",
                    transaction.getAmount(), transaction.getType(), transaction.getBalanceAfterTransaction());
        }
    }
    public void changeAccount(int accNum,String userName ,double initBal,double bal, ArrayList<Transaction> trans){
        this.accountNum = accNum;
        this.userName = userName;
        this.initBal = initBal;
        this.balance = bal;
        this.transactions.clear();
        this.transactions =trans;


    }

}
